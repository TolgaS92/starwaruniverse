{"version":3,"sources":["components/Navbar/Navbar.tsx","api/index.ts","components/Person/Person.tsx","components/SearchPerson/SearchPerson.tsx","components/People/People.tsx","components/App/App.tsx","index.tsx"],"names":["Navbar","className","url","init","a","fetch","headers","Accept","response","json","Person","person","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","films","map","movie","index","to","SearchPerson","props","onChange","handleInputChange","type","placeholder","id","autoComplete","People","useState","search","setSearch","React","people","setPeople","useEffect","fetchJson","then","peopleResponse","results","e","target","value","toLowerCase","scope","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAUeA,MAVf,WACI,OACI,8BACI,qBAAKC,UAAU,kEAAf,SACI,oBAAIA,UAAU,OAAd,gC,qFCJT,WAAyCC,EAAaC,GAAtD,eAAAC,EAAA,sEACoBC,MAAM,yBAAD,OACDH,GADC,YAAC,eAAD,OAGrBC,QAHqB,IAGrBA,IAAQ,IAHa,IAIxBG,QAAS,CACPC,OAAQ,mBACR,eAAgB,uBAPnB,cACGC,EADH,yBAYIA,EAASC,QAZb,4C,iCCgCQC,MAzBf,YAA0C,IAAxBC,EAAuB,EAAvBA,OAChB,OAAM,qBAAKV,UAAU,sDAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,cAAf,SACGU,EAAOC,OAEV,qBAAIX,UAAU,8BAAd,UACE,qBAAIA,UAAU,kBAAd,sBAA0CU,EAAOE,OAAjD,SACA,qBAAIZ,UAAU,kBAAd,oBAAwCU,EAAOG,KAA/C,SACA,qBAAIb,UAAU,kBAAd,0BAA8CU,EAAOI,cACrD,qBAAId,UAAU,kBAAd,0BAA8CU,EAAOK,cACrD,qBAAIf,UAAU,kBAAd,yBAA6CU,EAAOM,aACpD,qBAAIhB,UAAU,kBAAd,mBAAuCU,EAAOO,cAC9C,qBAAIjB,UAAU,kBAAd,sBAA0CU,EAAOQ,UAPnD,UASGR,EAAOS,MAAMC,KAAI,SAACC,EAAOC,GACxB,OAAM,oBAAItB,UAAU,aAAd,SACN,eAAC,IAAD,CAAMuB,GAAI,WAAaD,EAAM,GAA7B,mBAAwCA,EAAM,EAA9C,0BADuCA,eCExCE,MAzBf,SAAsBC,GAClB,OACI,qBAAKzB,UAAU,sBAAf,SACI,sBAAMA,UAAU,SAAhB,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAOA,UAAU,cAAjB,SAA+B,6CAEnC,qBAAKA,UAAU,QAAf,SACI,uBACAW,KAAK,SACLe,SAAUD,EAAME,kBAChBC,KAAK,OACL5B,UAAU,eACV6B,YAAY,yBACZC,GAAG,SACHC,aAAa,kBCuBtBC,MAjCf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BC,IAAMH,SAAmB,IAArD,mBAAOI,EAAP,KAAeC,EAAf,KAYA,OAXAF,IAAMG,WAAU,YHTX,SAAP,qCGUIC,CAAiC,kBAAoBN,GAClDO,MAAK,SAAAC,GAAc,OAAIJ,EAAUI,EAAeC,cAClD,CAACT,IASF,gCACE,cAAC,EAAD,CACEP,kBATN,SAA4BiB,GAC1B,GAAsB,WAAlBA,EAAEC,OAAOlC,KAAmB,CAChC,IAAMuB,EAASU,EAAEC,OAAOC,MAAMC,cAC9BZ,EAAUD,KAONA,OAAUA,IAEZ,uBAAOlC,UAAU,oBAAjB,SACA,gCACA,6BACI,oBAAIgD,MAAM,MAAV,SACGX,EAAOjB,KAAI,SAAAV,GAAM,OAAI,cAAC,EAAD,CAA0BA,OAAQA,GAArBA,EAAOC,qB,OCbvCsC,MAbf,WACE,OACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,mBAAlB,SACE,cAAC,EAAD,Y,MCHVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e76b89d1.chunk.js","sourcesContent":["function Navbar() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-light bg-danger p-5 d-flex justify-content-center\">\r\n                <h1 className=\"mb-0\">Starwars Cast</h1>\r\n            </nav>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default Navbar","export async function fetchJson<Response = any>(url: string, init?: RequestInit): Promise<Response> {\r\n    const response = await fetch(\r\n      `https://swapi.dev/api/${url}`,\r\n      {\r\n        ...init ?? {},\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        }\r\n      })\r\n  \r\n  \r\n    return response.json()\r\n  }\r\n  ","import { Result } from '../../types';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface PersonProps {\r\n  person: Result\r\n}\r\n\r\nfunction Person({ person }: PersonProps) {\r\n  return<div className=\"mb-5 mt-5 text-center d-flex justify-content-center\">\r\n          <div className=\"card col-4\">\r\n            <div className=\"card-header\">\r\n              {person.name}\r\n            </div>\r\n            <ul className=\"list-group list-group-flush\">\r\n              <li className=\"list-group-item\">Height : {person.height} cm</li>\r\n              <li className=\"list-group-item\">Mass : {person.mass} kg</li>\r\n              <li className=\"list-group-item\">Hair Color : {person.hair_color}</li>\r\n              <li className=\"list-group-item\">Skin Color : {person.skin_color}</li>\r\n              <li className=\"list-group-item\">Eye Color : {person.eye_color}</li>\r\n              <li className=\"list-group-item\">BoD : {person.birth_year}</li>\r\n              <li className=\"list-group-item\">Gender : {person.gender}</li>\r\n              Films : \r\n              {person.films.map((movie, index) => {\r\n                return<li className=\"list-group\" key= {index}>\r\n                <Link to={\"/films/\" + (index+1)}>Movie {index+1 } Click for details!</Link>\r\n                </li>\r\n              })}\r\n            </ul>\r\n            </div>\r\n          </div>\r\n}\r\n\r\nexport default Person\r\n","function SearchPerson(props: any) {\r\n    return (\r\n        <div className=\"container mt-3 mb-3\">\r\n            <form className=\"search\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n                        <label className=\"text-center\"><h3>Search:</h3></label>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <input\r\n                        name=\"search\"\r\n                        onChange={props.handleInputChange}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search for Cast Member\"\r\n                        id=\"search\"\r\n                        autoComplete=\"off\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default SearchPerson","import React, { useState } from 'react'\r\nimport { fetchJson } from '../../api'\r\nimport { Result } from '../../types'\r\nimport Person from '../Person'\r\nimport SearchPerson from '../SearchPerson/SearchPerson'\r\n\r\nfunction People() {\r\n  const [search, setSearch] = useState(\"\")\r\n  const [people, setPeople] = React.useState<Result[]>([])\r\n  React.useEffect(() => {\r\n    fetchJson<{ results: Result[] }>('people/?search=' + search)\r\n      .then(peopleResponse => setPeople(peopleResponse.results))\r\n  }, [search])\r\n\r\n  function handleInputChange (e: any) {\r\n    if (e.target.name === \"search\") {\r\n    const search = e.target.value.toLowerCase();\r\n    setSearch(search)\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <SearchPerson \r\n        handleInputChange = {handleInputChange}\r\n        search = {search}\r\n      />\r\n      <table className=\"table table-light\">\r\n      <tbody>\r\n      <tr>\r\n          <th scope=\"row\">\r\n            {people.map(person => <Person key={person.name} person={person} />)}\r\n          </th>\r\n      </tr>\r\n      </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default People\r\n","import Navbar from '../Navbar';\r\nimport People from '../People';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navbar />\r\n        <Route exact path=\"/starwaruniverse\">\r\n          <People />\r\n        </Route>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}